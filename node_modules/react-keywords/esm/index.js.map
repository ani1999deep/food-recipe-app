{
  "version": 3,
  "names": [
    "Fragment",
    "useMemo",
    "Highlight",
    "props",
    "children",
    "value",
    "color",
    "backgroundColor",
    "render",
    "child",
    "KeywordsInner",
    "caseIgnored",
    "splitMatch",
    "RegExp",
    "replace",
    "values",
    "match",
    "matched",
    "split",
    "map",
    "item",
    "idx",
    "length",
    "undefined"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import { FC, Fragment, PropsWithChildren, useMemo } from 'react';\n\nexport interface KeywordsProps {\n  value?: string;\n  color?: string;\n  caseIgnored?: boolean;\n  backgroundColor?: string;\n  render?: (keyword: string, color: string, backgroundColor: string) => JSX.Element;\n}\n\ninterface HighlightProps extends KeywordsProps {}\nconst Highlight: FC<PropsWithChildren<HighlightProps>> = (props) => {\n  const { children, value, color, backgroundColor, render } = props;\n  const child = useMemo(\n    () => (render ? render(value!, color!, backgroundColor!) : <span style={{ color, backgroundColor }}>{value}</span>),\n    [color, backgroundColor, value],\n  );\n  return (\n    <Fragment>\n      {children}\n      {value && child}\n    </Fragment>\n  );\n};\n\nconst KeywordsInner: FC<PropsWithChildren<KeywordsProps>> = (props) => {\n  const { children, caseIgnored = true, color = 'inherit', backgroundColor = '#ffff00', value, render } = props;\n  if (typeof children !== 'string') return <Fragment>{children}</Fragment>;\n  const splitMatch = new RegExp((value || '').replace(/\\\\/g, '\\\\\\\\'), caseIgnored ? 'ig' : 'g');\n  const values = value ? children.match(splitMatch) : [];\n  const matched = children.split(splitMatch);\n  return (\n    <Fragment>\n      {matched.map((item, idx) => {\n        return (\n          <Highlight\n            key={idx}\n            color={color}\n            value={matched.length > idx + 1 ? (values as string[])[idx] : undefined}\n            render={render}\n            backgroundColor={backgroundColor}\n          >\n            {item}\n          </Highlight>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default KeywordsInner;\n"
  ],
  "mappings": "AAAA,SAAaA,QAAb,EAA0CC,OAA1C,QAAyD,OAAzD;;;;AAWA,IAAMC,SAAgD,GAAIC,KAAD,IAAW;EAClE,IAAM;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,KAAnB;IAA0BC,eAA1B;IAA2CC;EAA3C,IAAsDL,KAA5D;EACA,IAAMM,KAAK,GAAGR,OAAO,CACnB,MAAOO,MAAM,GAAGA,MAAM,CAACH,KAAD,EAASC,KAAT,EAAiBC,eAAjB,CAAT,gBAA8C;IAAM,KAAK,EAAE;MAAED,KAAF;MAASC;IAAT,CAAb;IAAA,UAA0CF;EAA1C,EADxC,EAEnB,CAACC,KAAD,EAAQC,eAAR,EAAyBF,KAAzB,CAFmB,CAArB;EAIA,oBACE,MAAC,QAAD;IAAA,WACGD,QADH,EAEGC,KAAK,IAAII,KAFZ;EAAA,EADF;AAMD,CAZD;;AAcA,IAAMC,aAAmD,GAAIP,KAAD,IAAW;EACrE,IAAM;IAAEC,QAAF;IAAYO,WAAW,GAAG,IAA1B;IAAgCL,KAAK,GAAG,SAAxC;IAAmDC,eAAe,GAAG,SAArE;IAAgFF,KAAhF;IAAuFG;EAAvF,IAAkGL,KAAxG;EACA,IAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC,oBAAO,KAAC,QAAD;IAAA,UAAWA;EAAX,EAAP;EAClC,IAAMQ,UAAU,GAAG,IAAIC,MAAJ,CAAW,CAACR,KAAK,IAAI,EAAV,EAAcS,OAAd,CAAsB,KAAtB,EAA6B,MAA7B,CAAX,EAAiDH,WAAW,GAAG,IAAH,GAAU,GAAtE,CAAnB;EACA,IAAMI,MAAM,GAAGV,KAAK,GAAGD,QAAQ,CAACY,KAAT,CAAeJ,UAAf,CAAH,GAAgC,EAApD;EACA,IAAMK,OAAO,GAAGb,QAAQ,CAACc,KAAT,CAAeN,UAAf,CAAhB;EACA,oBACE,KAAC,QAAD;IAAA,UACGK,OAAO,CAACE,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAe;MAC1B,oBACE,KAAC,SAAD;QAEE,KAAK,EAAEf,KAFT;QAGE,KAAK,EAAEW,OAAO,CAACK,MAAR,GAAiBD,GAAG,GAAG,CAAvB,GAA4BN,MAAD,CAAqBM,GAArB,CAA3B,GAAuDE,SAHhE;QAIE,MAAM,EAAEf,MAJV;QAKE,eAAe,EAAED,eALnB;QAAA,UAOGa;MAPH,GACOC,GADP,CADF;IAWD,CAZA;EADH,EADF;AAiBD,CAvBD;;AAyBA,eAAeX,aAAf"
}