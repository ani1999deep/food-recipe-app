{
  "version": 3,
  "names": [
    "Highlight",
    "props",
    "children",
    "value",
    "color",
    "backgroundColor",
    "render",
    "child",
    "useMemo",
    "KeywordsInner",
    "caseIgnored",
    "splitMatch",
    "RegExp",
    "replace",
    "values",
    "match",
    "matched",
    "split",
    "map",
    "item",
    "idx",
    "length",
    "undefined"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import { FC, Fragment, PropsWithChildren, useMemo } from 'react';\n\nexport interface KeywordsProps {\n  value?: string;\n  color?: string;\n  caseIgnored?: boolean;\n  backgroundColor?: string;\n  render?: (keyword: string, color: string, backgroundColor: string) => JSX.Element;\n}\n\ninterface HighlightProps extends KeywordsProps {}\nconst Highlight: FC<PropsWithChildren<HighlightProps>> = (props) => {\n  const { children, value, color, backgroundColor, render } = props;\n  const child = useMemo(\n    () => (render ? render(value!, color!, backgroundColor!) : <span style={{ color, backgroundColor }}>{value}</span>),\n    [color, backgroundColor, value],\n  );\n  return (\n    <Fragment>\n      {children}\n      {value && child}\n    </Fragment>\n  );\n};\n\nconst KeywordsInner: FC<PropsWithChildren<KeywordsProps>> = (props) => {\n  const { children, caseIgnored = true, color = 'inherit', backgroundColor = '#ffff00', value, render } = props;\n  if (typeof children !== 'string') return <Fragment>{children}</Fragment>;\n  const splitMatch = new RegExp((value || '').replace(/\\\\/g, '\\\\\\\\'), caseIgnored ? 'ig' : 'g');\n  const values = value ? children.match(splitMatch) : [];\n  const matched = children.split(splitMatch);\n  return (\n    <Fragment>\n      {matched.map((item, idx) => {\n        return (\n          <Highlight\n            key={idx}\n            color={color}\n            value={matched.length > idx + 1 ? (values as string[])[idx] : undefined}\n            render={render}\n            backgroundColor={backgroundColor}\n          >\n            {item}\n          </Highlight>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default KeywordsInner;\n"
  ],
  "mappings": ";;;;;;;AAAA;;;;AAWA,IAAMA,SAAgD,GAAG,SAAnDA,SAAmD,CAACC,KAAD,EAAW;EAClE,IAAQC,QAAR,GAA4DD,KAA5D,CAAQC,QAAR;EAAA,IAAkBC,KAAlB,GAA4DF,KAA5D,CAAkBE,KAAlB;EAAA,IAAyBC,KAAzB,GAA4DH,KAA5D,CAAyBG,KAAzB;EAAA,IAAgCC,eAAhC,GAA4DJ,KAA5D,CAAgCI,eAAhC;EAAA,IAAiDC,MAAjD,GAA4DL,KAA5D,CAAiDK,MAAjD;EACA,IAAMC,KAAK,GAAG,IAAAC,cAAA,EACZ;IAAA,OAAOF,MAAM,GAAGA,MAAM,CAACH,KAAD,EAASC,KAAT,EAAiBC,eAAjB,CAAT,gBAA8C;MAAM,KAAK,EAAE;QAAED,KAAK,EAALA,KAAF;QAASC,eAAe,EAAfA;MAAT,CAAb;MAAA,UAA0CF;IAA1C,EAA3D;EAAA,CADY,EAEZ,CAACC,KAAD,EAAQC,eAAR,EAAyBF,KAAzB,CAFY,CAAd;EAIA,oBACE,sBAAC,eAAD;IAAA,WACGD,QADH,EAEGC,KAAK,IAAII,KAFZ;EAAA,EADF;AAMD,CAZD;;AAcA,IAAME,aAAmD,GAAG,SAAtDA,aAAsD,CAACR,KAAD,EAAW;EACrE,IAAQC,QAAR,GAAwGD,KAAxG,CAAQC,QAAR;EAAA,yBAAwGD,KAAxG,CAAkBS,WAAlB;EAAA,IAAkBA,WAAlB,mCAAgC,IAAhC;EAAA,mBAAwGT,KAAxG,CAAsCG,KAAtC;EAAA,IAAsCA,KAAtC,6BAA8C,SAA9C;EAAA,4BAAwGH,KAAxG,CAAyDI,eAAzD;EAAA,IAAyDA,eAAzD,sCAA2E,SAA3E;EAAA,IAAsFF,KAAtF,GAAwGF,KAAxG,CAAsFE,KAAtF;EAAA,IAA6FG,MAA7F,GAAwGL,KAAxG,CAA6FK,MAA7F;EACA,IAAI,OAAOJ,QAAP,KAAoB,QAAxB,EAAkC,oBAAO,qBAAC,eAAD;IAAA,UAAWA;EAAX,EAAP;EAClC,IAAMS,UAAU,GAAG,IAAIC,MAAJ,CAAW,CAACT,KAAK,IAAI,EAAV,EAAcU,OAAd,CAAsB,KAAtB,EAA6B,MAA7B,CAAX,EAAiDH,WAAW,GAAG,IAAH,GAAU,GAAtE,CAAnB;EACA,IAAMI,MAAM,GAAGX,KAAK,GAAGD,QAAQ,CAACa,KAAT,CAAeJ,UAAf,CAAH,GAAgC,EAApD;EACA,IAAMK,OAAO,GAAGd,QAAQ,CAACe,KAAT,CAAeN,UAAf,CAAhB;EACA,oBACE,qBAAC,eAAD;IAAA,UACGK,OAAO,CAACE,GAAR,CAAY,UAACC,IAAD,EAAOC,GAAP,EAAe;MAC1B,oBACE,qBAAC,SAAD;QAEE,KAAK,EAAEhB,KAFT;QAGE,KAAK,EAAEY,OAAO,CAACK,MAAR,GAAiBD,GAAG,GAAG,CAAvB,GAA4BN,MAAD,CAAqBM,GAArB,CAA3B,GAAuDE,SAHhE;QAIE,MAAM,EAAEhB,MAJV;QAKE,eAAe,EAAED,eALnB;QAAA,UAOGc;MAPH,GACOC,GADP,CADF;IAWD,CAZA;EADH,EADF;AAiBD,CAvBD;;eAyBeX,a"
}